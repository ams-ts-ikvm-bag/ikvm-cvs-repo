head	1.6;
access;
symbols
	v8_1_5717_0:1.6
	v8_1:1.6.0.10
	v8_0_5449_1:1.6
	v8_0_5449_0:1.6
	v8_0:1.6.0.8
	v7_4_5196_0:1.6
	v7_4:1.6.0.6
	v7_3:1.6.0.4
	v7_2_4630_6:1.6
	v7_2_4630_5:1.6
	v7_2_4630_4:1.6
	v7_2_4630_3:1.6
	v7_2_4630_2:1.6
	v0_46_0_4:1.5
	v7_2_4630_1:1.6
	v7_2:1.6.0.2
	v7_1_4532_2:1.5
	v7_1_4532_1:1.5
	v7_1_4532_0:1.5
	v7_1:1.5.0.10
	v7_0_4335_3:1.5
	v7_0_4335_2:1.5
	v7_0_4335_1:1.5
	v0_46_0_2:1.5
	v7_0_4335_0:1.5
	v7_0:1.5.0.8
	v0_40_0_6:1.4
	v0_40_0_5:1.4
	v0_46_0_1:1.5
	v0_46_0_0:1.5
	v0_46:1.5.0.6
	v0_36_0_14:1.3
	v0_44_0_6:1.5
	v0_44_0_5:1.5
	v0_44_0_4:1.5
	v0_44_0_3:1.5
	v0_44_0_2:1.5
	v0_42_0_7:1.5
	v0_44_0_1:1.5
	v0_44_0_0:1.5
	v0_44:1.5.0.4
	v0_42_0_6:1.5
	v0_42_0_5:1.5
	v0_42_0_4:1.5
	v0_42_0_3:1.5
	v0_42_0_2:1.5
	v0_42_0_1:1.5
	v0_42_0_0:1.5
	v0_42:1.5.0.2
	v0_40_0_3:1.4
	v0_40_0_2:1.4
	v0_40_0_1:1.4
	v0_40_0_0:1.4
	v0_40:1.4.0.4
	v0_36_0_13:1.3
	v0_38_0_1:1.4
	v0_38_0_0:1.4
	v0_38:1.4.0.2
	v0_36_0_9:1.3
	v0_36_0_7:1.3
	v0_36_0_5:1.3
	v0_36_0_4:1.3
	v0_36_0_3:1.3
	v0_36_0_2:1.3
	v0_36_0_1:1.3
	v0_36_0_0:1.3
	v0_36:1.3.0.8
	v0_34_0_3:1.3
	v0_34_0_2:1.3
	v0_34_0_1:1.3
	v0_34_0_0:1.3
	v0_34:1.3.0.6
	v0_32:1.3.0.4
	v0_32_0_0:1.3
	v0_30:1.3.0.2
	v0_28_0_0:1.3
	v0_26_0_1:1.3
	v0_26_0_0:1.3
	v0_24_0_1:1.3
	v0_24_0_0:1.3
	v0_22_0_0:1.2
	v0_20_0_0:1.2
	v0_18_0_0:1.2
	v0_16_0_0:1.2
	v0_14_0_1:1.1
	v0_14_0_0:1.1
	v0_12_0_0:1.1
	v0_10_0_1:1.1
	v0_10_0_0:1.1
	v0_8_0_0:1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.08.06.12.12.03;	author jfrijters;	state Exp;
branches;
next	1.5;

1.5
date	2009.08.28.06.47.16;	author jfrijters;	state Exp;
branches;
next	1.4;

1.4
date	2008.08.15.12.01.22;	author jfrijters;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.07.09.06.32;	author jfrijters;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.31.15.30.39;	author jfrijters;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.27.07.12.12;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.6
log
@- Marked MemberWrapper class abstract.
- Marked all classes that don't (and shouldn't) have subclasses sealed.
@
text
@/*
  Copyright (C) 2002 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
*/
using System;
using System.Collections.Generic;
using System.Diagnostics;

sealed class Profiler
{
	private static Profiler instance = new Profiler();
	private static Dictionary<string, Entry> counters = new Dictionary<string, Entry>();
	[ThreadStatic]
	private static Stack<Entry> stack;

	private sealed class Entry
	{
		internal long Time;
		internal long Count;
	}

	~Profiler()
	{
		// get rid off the warning that "instance" is unused
		instance.Equals(null);
		Console.Error.WriteLine("{0,-40}{1,10}{2,12}", "Event", "Count", "Time (ms)");
		Console.Error.WriteLine("{0,-40}{1,10}{2,12}", "-----", "-----", "---------");
		long totalTime = 0;
		foreach(KeyValuePair<string, Entry> e in counters)
		{
			Entry entry = e.Value;
			if(entry.Time == 0)
			{
				Console.Error.WriteLine("{0,-40}{1,10}", e.Key, entry.Count);
			}
			else
			{
				totalTime += entry.Time / 10000;
				Console.Error.WriteLine("{0,-40}{1,10}{2,12}", e.Key, entry.Count, entry.Time / 10000);
			}
		}
		Console.Error.WriteLine("{0,-40}{1,10}{2,12}", "", "", "---------");
		Console.Error.WriteLine("{0,-40}{1,10}{2,12}", "", "", totalTime);
	}

	[Conditional("PROFILE")]
	internal static void Enter(string name)
	{
		long ticks = DateTime.Now.Ticks;
		lock(counters)
		{
			if(stack == null)
			{
				stack = new Stack<Entry>();
			}
			if(stack.Count > 0)
			{
				stack.Peek().Time += ticks;
			}
			Entry e;
			if(!counters.TryGetValue(name, out e))
			{
				e = new Entry();
				counters[name] = e;
			}
			e.Count++;
			e.Time -= ticks;
			stack.Push(e);
		}
	}

	[Conditional("PROFILE")]
	internal static void Leave(string name)
	{
		long ticks = DateTime.Now.Ticks;
		stack.Pop();
		lock(counters)
		{
			Entry e = counters[name];
			e.Time += ticks;
			if(stack.Count > 0)
			{
				((Entry)stack.Peek()).Time -= ticks;
			}
		}
	}

	[Conditional("PROFILE")]
	internal static void Count(string name)
	{
		lock(counters)
		{
			Entry e;
			if(!counters.TryGetValue(name, out e))
			{
				e = new Entry();
				counters[name] = e;
			}
			e.Count++;
		}
	}
}
@


1.5
log
@Removed vestigial compact framework support.
@
text
@d28 1
a28 1
class Profiler
d35 1
a35 1
	private class Entry
@


1.4
log
@Generified all collections.
@
text
@a23 1
#if !COMPACT_FRAMEWORK
a121 19
#else
class Profiler
{
	[System.Diagnostics.Conditional("PROFILE")]
	internal static void Enter(string name)
	{
	}

	[System.Diagnostics.Conditional("PROFILE")]
	internal static void Leave(string name)
	{
	}

	[System.Diagnostics.Conditional("PROFILE")]
	internal static void Count(string name)
	{
	}
}
#endif
@


1.3
log
@*** empty log message ***
@
text
@d26 1
a26 1
using System.Collections;
d32 1
a32 1
	private static Hashtable counters = new Hashtable();
d34 1
a34 1
	private static Stack stack;
d49 1
a49 1
		foreach(DictionaryEntry e in counters)
d51 1
a51 1
			Entry entry = (Entry)e.Value;
d74 1
a74 1
				stack = new Stack();
d78 1
a78 1
				((Entry)stack.Peek()).Time += ticks;
d80 2
a81 2
			Entry e = (Entry)counters[name];
			if(e == null)
d99 1
a99 1
			Entry e = (Entry)counters[name];
d113 2
a114 2
			Entry e = (Entry)counters[name];
			if(e == null)
@


1.2
log
@*** empty log message ***
@
text
@d24 1
d123 19
@


1.1
log
@*** empty log message ***
@
text
@d43 2
@

