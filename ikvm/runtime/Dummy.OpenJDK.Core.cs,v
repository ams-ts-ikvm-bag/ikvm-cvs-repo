head	1.14;
access;
symbols
	v8_1_5717_0:1.14
	v8_1:1.14.0.2
	v8_0_5449_1:1.12
	v8_0_5449_0:1.12
	v8_0:1.12.0.2
	v7_4_5196_0:1.11
	v7_4:1.11.0.2
	v7_3:1.9.0.8
	v7_2_4630_6:1.9
	v7_2_4630_5:1.9
	v7_2_4630_4:1.9
	v7_2_4630_3:1.9
	v7_2_4630_2:1.9
	v0_46_0_4:1.6
	v7_2_4630_1:1.9
	v7_2:1.9.0.6
	v7_1_4532_2:1.9
	v7_1_4532_1:1.9
	v7_1_4532_0:1.9
	v7_1:1.9.0.4
	v7_0_4335_3:1.9
	v7_0_4335_2:1.9
	v7_0_4335_1:1.9
	v0_46_0_2:1.6
	v7_0_4335_0:1.9
	v7_0:1.9.0.2
	v0_46_0_1:1.6
	v0_46_0_0:1.6
	v0_46:1.6.0.2
	v0_44_0_6:1.4
	v0_44_0_5:1.4
	v0_44_0_4:1.4
	v0_44_0_3:1.4
	v0_44_0_2:1.4
	v0_44_0_1:1.4
	v0_44_0_0:1.4
	v0_44:1.4.0.2;
locks; strict;
comment	@ * @;


1.14
date	2015.06.24.14.10.40;	author jfrijters;	state Exp;
branches;
next	1.13;

1.13
date	2015.06.23.07.24.39;	author jfrijters;	state Exp;
branches;
next	1.12;

1.12
date	2014.05.27.09.44.08;	author jfrijters;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.22.10.35.17;	author jfrijters;	state Exp;
branches;
next	1.10;

1.10
date	2013.03.22.10.20.30;	author jfrijters;	state Exp;
branches;
next	1.9;

1.9
date	2011.08.09.14.51.02;	author jfrijters;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.25.23.11.10;	author jfrijters;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.15.09.05.27;	author jfrijters;	state Exp;
branches;
next	1.6;

1.6
date	2010.11.25.08.50.00;	author jfrijters;	state Exp;
branches;
next	1.5;

1.5
date	2010.08.05.13.43.01;	author jfrijters;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.27.12.08.01;	author jfrijters;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.27.11.21.23;	author jfrijters;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.27.09.17.13;	author jfrijters;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.27.08.38.48;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Optimized LambdaForm compiler.
@
text
@/*
  Copyright (C) 2010-2014 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
*/

namespace ikvm
{
	namespace @@internal
	{
		public class CallerID { }
	}
}

namespace java
{
	namespace io
	{
		public class File { }
		public class FileDescriptor { }
		public class ObjectInputStream { }
		public class ObjectOutputStream { }
		public class ObjectStreamField { }
		public class PrintStream { }
		public class PrintWriter { }
	}

	namespace lang
	{
		public class Class { }
		public class ClassLoader { }
		public class IllegalArgumentException { }
		public class SecurityManager { }
		public class StackTraceElement { }

		namespace invoke
		{
			public class DirectMethodHandle { }
			public class LambdaForm { }
			public class MemberName { }
			public class MethodType { }
			public class MethodHandle { }
			public class CallSite { }
		}

		namespace reflect
		{
			public class Constructor : Executable { }
			public class Executable { }
			public class Field { }
			public class Method : Executable { }
		}
	}

	namespace net
	{
		public class URL { }
		public class InetAddress { }
	}

	namespace nio
	{
		public class ByteBuffer { }
	}

	namespace security
	{
		public class AccessControlContext { }
		public class ProtectionDomain { }
	}

	namespace util
	{
		public class Enumeration { }
		public class Vector { }
	}
}

namespace sun.reflect
{
	public interface ConstructorAccessor { }
	public interface FieldAccessor { }
	public interface MethodAccessor { }
}
@


1.13
log
@Fixed regression introduced with pairwise convert optimization. MethodHandle String construction is now handled much more cleanly by hooking DirectMethodHandle.makeAllocator() instead of fiddling with the MemberName.
@
text
@d57 1
@


1.12
log
@Use java.lang.reflect.Executable instead of object as common base class of Method and Constructor.
@
text
@d56 1
@


1.11
log
@More static typing.
@
text
@d2 1
a2 1
  Copyright (C) 2010-2013 Jeroen Frijters
a56 3
			public class AdapterMethodHandle { }
			public class BoundMethodHandle { }
			public class DirectMethodHandle { }
d64 2
a65 1
			public class Constructor { }
d67 1
a67 1
			public class Method { }
@


1.10
log
@Use types in ReflectionFactory native method signatures.
@
text
@d68 1
d100 1
@


1.9
log
@Added two types to allow ikvmstub to work on second-pass IKVM.Runtime.dll with dummy IKVM.OpenJDK.Core.dll
@
text
@d2 1
a2 1
  Copyright (C) 2010 Jeroen Frijters
d95 6
@


1.8
log
@Merge in java.lang.invoke package and the beginnings of MethodHandle support.
@
text
@d50 1
d68 1
@


1.7
log
@Updated bulk of java.nio to OpenJDK 7.
@
text
@d53 11
@


1.6
log
@Added CallerID and AccessControlContext to be able to use them in method signatures during first-pass compilation.
@
text
@d38 1
d62 1
@


1.5
log
@Massive change to change resource handling. Java resources are now stored in jars that are stored as managed .NET resources. The jars are projected into VFS and the assembly class loaders know how to load resources from these jars.
@
text
@d25 8
d70 1
@


1.4
log
@Moved printStackTrace to C# side.
@
text
@d50 5
d64 6
@


1.3
log
@Moved readObject/writeObject to C# side.
@
text
@d33 2
@


1.2
log
@First stab at making the "native" method signatures more statically typed.
@
text
@d30 2
d40 1
@


1.1
log
@Add a dummy IKVM.OpenJDK.Core.dll to the build to make it possible to use core types in method signatures during first-pass build of IKVM.Runtime.dll.
@
text
@d27 6
d38 10
@

