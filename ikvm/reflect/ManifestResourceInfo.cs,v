head	1.7;
access;
symbols
	v8_1_5717_0:1.7
	v8_1:1.7.0.12
	v8_0_5449_1:1.7
	v8_0_5449_0:1.7
	v8_0:1.7.0.10
	v7_4_5196_0:1.7
	v7_4:1.7.0.8
	v7_3:1.7.0.6
	v7_2_4630_6:1.7
	v7_2_4630_5:1.7
	v7_2_4630_4:1.7
	v7_2_4630_3:1.7
	v7_2_4630_2:1.7
	v0_46_0_4:1.4
	v7_2_4630_1:1.7
	v7_2:1.7.0.4
	v7_1_4532_2:1.7
	v7_1_4532_1:1.7
	v7_1_4532_0:1.7
	v7_1:1.7.0.2
	v7_0_4335_3:1.5
	v7_0_4335_2:1.5
	v7_0_4335_1:1.5
	v0_46_0_2:1.4
	v7_0_4335_0:1.5
	v7_0:1.5.0.2
	v0_46_0_1:1.4
	v0_46_0_0:1.4
	v0_46:1.4.0.2
	v0_44_0_6:1.3
	v0_44_0_5:1.3
	v0_44_0_4:1.3
	v0_44_0_3:1.3
	v0_44_0_2:1.3
	v0_44_0_1:1.3
	v0_44_0_0:1.3
	v0_44:1.3.0.2;
locks; strict;
comment	@ * @;


1.7
date	2012.04.18.09.20.46;	author jfrijters;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.09.09.11.07;	author jfrijters;	state Exp;
branches;
next	1.5;

1.5
date	2011.03.10.10.47.37;	author jfrijters;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.13.05.58.54;	author jfrijters;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.28.06.32.11;	author jfrijters;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.25.05.49.01;	author jfrijters;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.25.05.29.31;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Added support for manifest resources that are forwarded to another assembly.
@
text
@/*
  Copyright (C) 2009-2012 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
*/
using System;
using IKVM.Reflection.Reader;
using IKVM.Reflection.Metadata;

namespace IKVM.Reflection
{
	public sealed class ManifestResourceInfo
	{
		private readonly ModuleReader module;
		private readonly int index;

		internal ManifestResourceInfo(ModuleReader module, int index)
		{
			this.module = module;
			this.index = index;
		}

		public ResourceAttributes __ResourceAttributes
		{
			get { return (ResourceAttributes)module.ManifestResource.records[index].Flags; }
		}

		public int __Offset
		{
			get { return module.ManifestResource.records[index].Offset; }
		}

		public ResourceLocation ResourceLocation
		{
			get
			{
				int implementation = module.ManifestResource.records[index].Implementation;
				if ((implementation >> 24) == AssemblyRefTable.Index)
				{
					Assembly asm = ReferencedAssembly;
					if (asm == null || asm.__IsMissing)
					{
						return ResourceLocation.ContainedInAnotherAssembly;
					}
					return asm.GetManifestResourceInfo(module.GetString(module.ManifestResource.records[index].Name)).ResourceLocation | ResourceLocation.ContainedInAnotherAssembly;
				}
				else if ((implementation >> 24) == FileTable.Index)
				{
					if ((implementation & 0xFFFFFF) == 0)
					{
						return ResourceLocation.ContainedInManifestFile | ResourceLocation.Embedded;
					}
					return 0;
				}
				else
				{
					throw new BadImageFormatException();
				}
			}
		}

		public Assembly ReferencedAssembly
		{
			get
			{
				int implementation = module.ManifestResource.records[index].Implementation;
				if ((implementation >> 24) == AssemblyRefTable.Index)
				{
					return module.ResolveAssemblyRef((implementation & 0xFFFFFF) - 1);
				}
				return null;
			}
		}

		public string FileName
		{
			get
			{
				int implementation = module.ManifestResource.records[index].Implementation;
				if ((implementation >> 24) == FileTable.Index)
				{
					if ((implementation & 0xFFFFFF) == 0)
					{
						return null;
					}
					else
					{
						return module.GetString(module.File.records[(implementation & 0xFFFFFF) - 1].Name);
					}
				}
				return null;
			}
		}
	}
}
@


1.6
log
@Added ManifestResourceInfo.__Offset property.
@
text
@d2 1
a2 1
  Copyright (C) 2009 Jeroen Frijters
d58 6
a63 2
					//return ResourceLocation.ContainedInAnotherAssembly;
					throw new NotImplementedException();
d82 9
a90 1
			get { throw new NotImplementedException(); }
d109 1
a109 1
				throw new NotImplementedException();
@


1.5
log
@Added API extension to expose resource attributes.
@
text
@d46 5
@


1.4
log
@Prevent external subclassing. It's not part of the design to suppor that, now it is also enforced.
@
text
@d41 5
@


1.3
log
@Added support for getting the filename of external resources.
@
text
@d30 1
a30 1
	public class ManifestResourceInfo
@


1.2
log
@Removed UTF-8 byte order marks.
@
text
@d57 1
a57 1
					throw new NotImplementedException();
d75 2
a76 1
				if (this.ResourceLocation != (ResourceLocation.ContainedInManifestFile | ResourceLocation.Embedded))
d78 8
a85 1
					throw new NotImplementedException();
d87 1
a87 1
				return null;
@


1.1
log
@New IKVM.Reflection implementation.
@
text
@d1 1
a1 1
ï»¿/*
@

