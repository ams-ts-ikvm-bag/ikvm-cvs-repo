head	1.55;
access;
symbols
	v8_1_5717_0:1.55
	v8_1:1.55.0.4
	v8_0_5449_1:1.55
	v8_0_5449_0:1.55
	v8_0:1.55.0.2
	v7_4_5196_0:1.53
	v7_4:1.53.0.4
	v7_3:1.53.0.2
	v7_2_4630_6:1.46.6.1
	v7_2_4630_5:1.46.6.1
	v7_2_4630_4:1.46.6.1
	v7_2_4630_3:1.46.6.1
	v7_2_4630_2:1.46.6.1
	v0_46_0_4:1.44
	v7_2_4630_1:1.46.6.1
	v7_2:1.46.0.6
	v7_1_4532_2:1.46
	v7_1_4532_1:1.46
	v7_1_4532_0:1.46
	v7_1:1.46.0.4
	v7_0_4335_3:1.46
	v7_0_4335_2:1.46
	v7_0_4335_1:1.46
	v0_46_0_2:1.44
	v7_0_4335_0:1.46
	v7_0:1.46.0.2
	v0_40_0_6:1.31
	v0_40_0_5:1.31
	v0_46_0_1:1.44
	v0_46_0_0:1.44
	v0_46:1.44.0.2
	v0_36_0_14:1.23
	v0_44_0_6:1.39
	v0_44_0_5:1.39
	v0_44_0_4:1.39
	v0_44_0_3:1.39
	v0_44_0_2:1.39
	v0_42_0_7:1.34
	v0_44_0_1:1.39
	v0_44_0_0:1.39
	v0_44:1.39.0.2
	v0_42_0_6:1.34
	v0_42_0_5:1.34
	v0_42_0_4:1.34
	v0_42_0_3:1.34
	v0_42_0_2:1.34
	v0_42_0_1:1.34
	v0_42_0_0:1.34
	v0_42:1.34.0.2
	v0_40_0_3:1.31
	v0_40_0_2:1.31
	v0_40_0_1:1.31
	v0_40_0_0:1.31
	v0_40:1.31.0.2
	v0_36_0_13:1.23
	v0_38_0_1:1.26
	v0_38_0_0:1.26
	v0_38:1.26.0.2
	v0_36_0_9:1.23
	v0_36_0_7:1.23
	v0_36_0_5:1.23
	v0_36_0_4:1.23
	v0_36_0_3:1.23
	v0_36_0_2:1.23
	v0_36_0_1:1.23
	v0_36_0_0:1.23
	v0_36:1.23.0.2
	v0_34_0_3:1.21
	v0_34_0_2:1.21
	v0_34_0_1:1.21
	v0_34_0_0:1.21
	v0_34:1.21.0.2
	v0_32:1.19.0.2
	v0_32_0_0:1.19
	v0_30:1.17.0.2
	v0_28_0_0:1.17
	v0_26_0_1:1.17
	v0_26_0_0:1.17
	v0_24_0_1:1.17
	v0_24_0_0:1.17
	v0_22_0_0:1.15
	v0_20_0_0:1.14
	v0_18_0_0:1.14
	v0_16_0_0:1.14
	v0_14_0_1:1.14
	v0_14_0_0:1.14
	v0_12_0_0:1.14
	v0_10_0_1:1.13
	v0_10_0_0:1.13
	v0_8_0_0:1.10
	initial:1.1.1.1
	ikvm:1.1.1;
locks; strict;
comment	@# @;


1.55
date	2014.05.21.14.17.51;	author jfrijters;	state Exp;
branches;
next	1.54;

1.54
date	2014.05.21.13.42.55;	author jfrijters;	state Exp;
branches;
next	1.53;

1.53
date	2013.03.19.10.12.46;	author jfrijters;	state Exp;
branches;
next	1.52;

1.52
date	2013.03.16.07.13.12;	author jfrijters;	state Exp;
branches;
next	1.51;

1.51
date	2013.02.27.16.23.18;	author jfrijters;	state Exp;
branches;
next	1.50;

1.50
date	2013.02.27.16.05.21;	author jfrijters;	state Exp;
branches;
next	1.49;

1.49
date	2013.01.12.14.27.11;	author jfrijters;	state Exp;
branches;
next	1.48;

1.48
date	2012.12.13.10.11.17;	author jfrijters;	state Exp;
branches;
next	1.47;

1.47
date	2012.09.17.10.23.23;	author jfrijters;	state Exp;
branches;
next	1.46;

1.46
date	2011.08.12.06.15.58;	author jfrijters;	state Exp;
branches
	1.46.6.1;
next	1.45;

1.45
date	2011.05.13.10.21.48;	author jfrijters;	state Exp;
branches;
next	1.44;

1.44
date	2010.12.24.08.00.53;	author jfrijters;	state Exp;
branches;
next	1.43;

1.43
date	2010.08.23.13.11.37;	author jfrijters;	state Exp;
branches;
next	1.42;

1.42
date	2010.08.23.04.26.41;	author jfrijters;	state Exp;
branches;
next	1.41;

1.41
date	2010.08.20.13.15.47;	author jfrijters;	state Exp;
branches;
next	1.40;

1.40
date	2010.08.20.05.35.49;	author jfrijters;	state Exp;
branches;
next	1.39;

1.39
date	2010.06.09.12.26.28;	author jfrijters;	state Exp;
branches;
next	1.38;

1.38
date	2010.04.20.05.40.12;	author jfrijters;	state Exp;
branches;
next	1.37;

1.37
date	2010.01.28.08.06.56;	author jfrijters;	state Exp;
branches;
next	1.36;

1.36
date	2010.01.25.07.52.27;	author jfrijters;	state Exp;
branches;
next	1.35;

1.35
date	2009.11.12.07.40.52;	author jfrijters;	state Exp;
branches;
next	1.34;

1.34
date	2009.06.29.09.32.59;	author jfrijters;	state Exp;
branches;
next	1.33;

1.33
date	2009.06.29.08.03.51;	author jfrijters;	state Exp;
branches;
next	1.32;

1.32
date	2009.06.26.06.53.09;	author jfrijters;	state Exp;
branches;
next	1.31;

1.31
date	2009.03.26.14.32.28;	author jfrijters;	state Exp;
branches;
next	1.30;

1.30
date	2009.03.16.06.50.44;	author jfrijters;	state Exp;
branches;
next	1.29;

1.29
date	2009.01.25.10.27.55;	author smallsql;	state Exp;
branches;
next	1.28;

1.28
date	2008.12.23.07.28.20;	author jfrijters;	state Exp;
branches;
next	1.27;

1.27
date	2008.11.14.08.42.07;	author jfrijters;	state Exp;
branches;
next	1.26;

1.26
date	2008.09.18.05.34.30;	author jfrijters;	state Exp;
branches;
next	1.25;

1.25
date	2008.08.06.12.22.06;	author jfrijters;	state Exp;
branches;
next	1.24;

1.24
date	2007.12.27.11.08.23;	author jfrijters;	state Exp;
branches;
next	1.23;

1.23
date	2007.08.22.11.51.15;	author jfrijters;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.24.12.17.38;	author jfrijters;	state Exp;
branches;
next	1.21;

1.21
date	2007.02.15.09.09.45;	author jfrijters;	state Exp;
branches;
next	1.20;

1.20
date	2006.12.11.13.13.27;	author jfrijters;	state Exp;
branches;
next	1.19;

1.19
date	2006.11.27.07.39.31;	author jfrijters;	state Exp;
branches;
next	1.18;

1.18
date	2006.10.16.05.40.35;	author jfrijters;	state Exp;
branches;
next	1.17;

1.17
date	2005.12.12.08.51.36;	author jfrijters;	state Exp;
branches;
next	1.16;

1.16
date	2005.12.07.09.06.32;	author jfrijters;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.01.11.16.12;	author jfrijters;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.01.08.24.54;	author jfrijters;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.07.09.34.20;	author jfrijters;	state Exp;
branches;
next	1.12;

1.12
date	2004.12.02.08.43.06;	author jfrijters;	state Exp;
branches;
next	1.11;

1.11
date	2004.08.30.15.56.24;	author jfrijters;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.27.07.12.09;	author jfrijters;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.05.07.33.24;	author jfrijters;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.07.15.42.09;	author vargaz2;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.06.10.34.29;	author vargaz2;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.19.22.19.18;	author jfrijters;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.21.10.06.36;	author jfrijters;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.30.12.09.01;	author jfrijters;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.10.11.43.12;	author jfrijters;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.08.13.35.05;	author jfrijters;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.18.16.00.25;	author jfrijters;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.12.18.16.00.25;	author jfrijters;	state Exp;
branches;
next	;

1.46.6.1
date	2012.09.17.11.17.30;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.55
log
@Integrated Nashorn.
@
text
@<?xml version="1.0"?>
<!--
  Copyright (C) 2002-2013 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
-->
<project name="ikvm" default="managed">
    <include buildfile="ikvm.include" />
    <target name="native">
        <nant buildfile="native/native.build" />
    </target>
    <target name="signed">
         <property name="signed" value="SIGNCODE" />
         <property name="signoption" value="-key:ikvm-key" />
         <call target="managed" />
    </target>
    <target name="managed" depends="clean-managed CommonAssemblyInfo">
        <nant buildfile="tools/tools.build" />
        <nant buildfile="reflect/reflect.build" />
        <nant buildfile="ikvmstub/ikvmstub.build" />
        <nant buildfile="runtime/runtime.build" target="first-pass" />
        <nant buildfile="awt/awt.build" target="first-pass" />
        <nant buildfile="ikvmc/ikvmc.build" />
        <nant buildfile="openjdk/openjdk.build" />
        <nant buildfile="runtime/runtime.build" />
        <nant buildfile="openjdk/openjdk.build" target="tools" />
        <nant buildfile="ikvm/ikvm.build" />
        <nant buildfile="awt/awt.build" />
        <nant buildfile="jvm/jvm.build" />
    </target>
    <target name="CommonAssemblyInfo">
        <copy file="CommonAssemblyInfo.cs.in" tofile="CommonAssemblyInfo.cs" overwrite="true">
            <filterchain>
                <replacetokens>
                    <token key="BUILD" value="${timespan::get-days(datetime::now() - datetime::parse('2000-01-01'))}" />
                </replacetokens>
            </filterchain>
        </copy>
    </target>
    <target name="clean" depends="clean-managed clean-native" />
    <target name="clean-managed">
        <delete failonerror="false">
            <fileset>
                <include name="CommonAssemblyInfo.cs" />
                <include name="awt/AssemblyInfo.cs" />
                <include name="bin/IKVM.AWT.WinForms.dll" />
                <include name="bin/IKVM.MSBuild.dll" />
                <include name="bin/IKVM.MSBuild.Java.Targets" />
                <include name="bin/IKVM.Reflection.dll" />
                <include name="bin/IKVM.Runtime.dll" />
                <include name="bin/IKVM.Runtime.JNI.dll" />
                <include name="bin/IKVM.OpenJDK.*.dll" />
                <include name="bin/ikvm.exe" />
                <include name="bin/ikvm.exe.config" />
                <include name="bin/ikvmc.exe" />
                <include name="bin/ikvmc.exe.config" />
                <include name="bin/ikvmstub.exe" />
                <include name="bin/ikvmstub.exe.config" />
                <include name="bin/javac.exe" />
                <include name="bin/javah.exe" />
                <include name="bin/javap.exe" />
                <include name="bin/jjs.exe" />
                <include name="bin-x64/JVM.DLL" />
                <include name="bin-x86/JVM.DLL" />
                <include name="classpath/**.class" />
                <include name="lib/ikvm-api.jar" />
                <include name="openjdk/*.dll" />
                <include name="openjdk/*.jar" />
                <include name="openjdk/allsources.gen.lst" />
                <include name="openjdk/AssemblyInfo.java" />
                <include name="openjdk/copyright.txt" />
                <include name="openjdk/java/lang/PropertyConstants.java" />
                <include name="openjdk/MANIFEST.MF" />
                <include name="openjdk/resources.zip" />
                <include name="openjdk/response.gen.txt" />
                <include name="openjdk/tools.gen.rsp" />
                <include name="openjdk/vfs.zip" />
                <include name="openjdk/**.class" />
                <include name="openjdk/AssemblyInfo.cs" />
                <include name="openjdk/JniAssemblyInfo.cs" />
                <include name="runtime/*.dll" />
                <include name="runtime/*.jar" />
                <include name="tools/*.exe" />
                <include name="tools/*.dll" />
                <include name="tools/pubkey.txt" />
            </fileset>
        </delete>
        <nant buildfile="nuget/nupkg.build" target="clean" />
    </target>
    <target name="clean-native">
        <delete failonerror="false">
            <fileset>
                <include name="bin/libikvm-native.so" />
                <include name="bin/ikvm-native-win32-x64.dll" />
                <include name="bin/ikvm-native-win32-x86.dll" />
                <include name="native/ikvm-native.rc" />
                <include name="native/Release-x64/ikvm-native.dll" />
                <include name="native/Release-x64/*.obj" />
                <include name="native/Release-x86/ikvm-native.dll" />
                <include name="native/Release-x86/*.obj" />
            </fileset>
        </delete>
    </target>
</project>
@


1.54
log
@Delete jdk-tools artifacts on clean.
@
text
@d80 1
@


1.53
log
@Added build project to create nuget package.
@
text
@d77 3
@


1.52
log
@Clean up generated files.
@
text
@d102 1
@


1.51
log
@Added license headers to build scripts.
@
text
@d62 2
d85 4
d93 2
d109 1
@


1.50
log
@Clean all binaries in the tools directory.
@
text
@d2 23
@


1.49
log
@Replace ilasm usage to generate JVM.DLL with a custom tool.
@
text
@d66 2
a67 3
                <include name="tools/asmref.exe" />
                <include name="tools/depcheck.exe" />
                <include name="tools/pubkey.exe" />
a68 2
                <include name="tools/updbaseaddresses.exe" />
                <include name="tools/writeappconfig.exe" />
@


1.48
log
@Ported MSBuild task to .NET 2.0 and included the project in the VS solution.
@
text
@a9 1
         <property name="ilasm_signoption" value="/key:@@ikvm-key" />
@


1.47
log
@Removed permanent app.config files and changed build process to only generate them when doing a .NET 2.0 build.
@
text
@d41 2
@


1.46
log
@Fixed build to always run ikvmstub on first-pass version of IKVM.Runtime.dll. Cleaned up runtime.build. Always do a first-pass runtime build.
@
text
@d46 1
d48 1
d50 1
d70 1
@


1.46.6.1
log
@- Fixed build number
- Fixed .NET 4.0 build issues
- Fixed map.xml custom attribute application regression
- Updated HOWTO
@
text
@a45 1
                <include name="bin/ikvm.exe.config" />
a46 1
                <include name="bin/ikvmc.exe.config" />
a47 1
                <include name="bin/ikvmstub.exe.config" />
a66 1
                <include name="tools/writeappconfig.exe" />
@


1.45
log
@Changed build and JNI code to use different names for the Windows x86 and x64 versions of the native dll.
@
text
@d15 2
a18 1
        <nant buildfile="reflect/reflect.build" />
a19 1
        <nant buildfile="ikvmstub/ikvmstub.build" />
d60 2
@


1.44
log
@Generate lib/ikvm-api.jar to expose the ikvm API more easily to java code (by shipping this jar as part of ikvmbin.zip).
@
text
@d72 2
a73 2
                <include name="bin-x64/ikvm-native.dll" />
                <include name="bin-x86/ikvm-native.dll" />
@


1.43
log
@Moved ikvm-native.dll from clean-managed to clean-native.
@
text
@d51 1
@


1.42
log
@Changed the default build target to managed and split the clean target into managed and native.
@
text
@a47 1
                <include name="bin-x64/ikvm-native.dll" />
a48 1
                <include name="bin-x86/ikvm-native.dll" />
d71 2
@


1.41
log
@Auto-generate CommonAssemblyInfo.cs with today's build number.
@
text
@d2 1
a2 1
<project name="ikvm" default="all">
d4 3
d11 1
a11 1
         <call target="all" />
d13 1
a13 5
    <target name="all" depends="clean native managed" />
    <target name="native">
        <nant buildfile="native/native.build" />
    </target>
    <target name="managed" depends="CommonAssemblyInfo">
d36 2
a37 1
    <target name="clean">
a44 1
                <include name="bin/libikvm-native.so" />
d66 7
@


1.40
log
@- Removed the requirement to have peverify and ilasm in the PATH. They are now located automatically and if they are not found, the corresponding build steps are skipped.
- Added "managed" and "native" targets to ikvm.build to allow building just the managed parts (that don't require a C compiler to be installed).
@
text
@d10 1
a10 1
    <target name="all" depends="native managed" />
d14 1
a14 1
    <target name="managed">
d28 9
@


1.39
log
@Added "first-pass" build of IKVM.AWT.WinForms.dll and moved "native" AWT code from IKVM.Runtime.dll to IKVM.AWT.WinForms.dll.
@
text
@d3 1
d10 5
a14 1
    <target name="all">
a17 1
        <nant buildfile="native/native.build" />
d26 1
a26 3
        <if test="${platform::is-win32()}">
            <nant buildfile="jvm/jvm.build" />
        </if>
@


1.38
log
@Added some more files to clean up.
@
text
@d12 1
@


1.37
log
@Removed pre-generated stub jars from cvs and modified build process to generate them during the build.
@
text
@d41 9
@


1.36
log
@Integrated new IKVM.Reflection implementation.
@
text
@d15 1
a19 1
        <nant buildfile="ikvmstub/ikvmstub.build" />
@


1.35
log
@Created IKVM.OpenJDK.Tools.dll (which is going to be the equivalent of tools.jar).
@
text
@d13 1
a13 1
        <nant buildfile="refemit/refemit.build" />
d29 1
a29 3
                <include name="bin/IKVM.Reflection.Emit.dll" />
                <include name="bin/IKVM.Reflection.Emit.MdbWriter.dll" />
                <include name="bin/IKVM.Reflection.Emit.PdbWriter.dll" />
@


1.34
log
@Added a mechanism to prevent accidentally introducing new dependencies in the OpenJDK assemblies.
@
text
@d17 1
@


1.33
log
@Split XML assembly into 7 parts. With thanks to Michael Kay.
@
text
@d43 1
d46 1
@


1.32
log
@Changed build to put architecture specific binaries in bin-x86 or bin-x64 directory. Note that the gcc build of libikvm-native.so still goes to bin.
@
text
@d33 1
a33 11
                <include name="bin/IKVM.OpenJDK.Charsets.dll" />
                <include name="bin/IKVM.OpenJDK.Corba.dll" />
                <include name="bin/IKVM.OpenJDK.Core.dll" />
                <include name="bin/IKVM.OpenJDK.Jdbc.dll" />
                <include name="bin/IKVM.OpenJDK.Management.dll" />
                <include name="bin/IKVM.OpenJDK.Misc.dll" />
                <include name="bin/IKVM.OpenJDK.Security.dll" />
                <include name="bin/IKVM.OpenJDK.SwingAWT.dll" />
                <include name="bin/IKVM.OpenJDK.Text.dll" />
                <include name="bin/IKVM.OpenJDK.Util.dll" />
                <include name="bin/IKVM.OpenJDK.XML.dll" />
@


1.31
log
@- Renamed IKVM.PdbWriter.dll to IKVM.Reflection.Emit.PdbWriter.dll.
- Added IKVM.Reflection.Emit.MdbWriter.dll (untested and not yet complete).
- Changed SymbolWriter plug-in API to be more flexible.
- Added ModuleBuilder.ResolveMethod() API.
- Don't write PE debug directory if symbol writer doesn't supply debug data.
@
text
@a43 1
                <include name="bin/ikvm-native.dll" />
d48 4
a51 1
                <include name="bin/JVM.DLL" />
d55 4
a58 2
                <include name="native/Release/ikvm-native.dll" />
                <include name="native/Release/*.obj" />
@


1.30
log
@Add IKVM.PdbWriter.dll to clean list.
@
text
@d29 2
a43 1
                <include name="bin/IKVM.PdbWriter.dll" />
@


1.29
log
@Build for IKVM.OpenJDK.Jdbc.dll added
@
text
@d42 1
@


1.28
log
@Updated build to split IKVM.OpenJDK.ClassLibrary.dll into ten parts.
@
text
@d34 1
@


1.27
log
@Integrated IKVM.Reflection.Emit in ikvmc.
@
text
@d31 10
a40 1
                <include name="bin/IKVM.OpenJDK.ClassLibrary.dll" />
@


1.26
log
@Added tool to extract public key from ikvm-key container into tools/pubkey.txt.
@
text
@d13 1
d26 1
a26 1
	          <fileset>
d28 1
@


1.25
log
@Removed support for building with GNU Classpath class library.
@
text
@d37 2
@


1.24
log
@Delete IKVM.Runtime.JNI.dll in clean target.
@
text
@a8 4
    <target name="classpath">
         <property name="classpath" value="true" />
         <call target="all" />
    </target>
a9 1
        <property overwrite="false" name="classpath" value="false" />
d14 1
a14 2
        <nant if="${classpath}" buildfile="classpath/classpath.build" />
        <nant unless="${classpath}" buildfile="openjdk/openjdk.build" />
d25 1
a25 1
	    <fileset>
a28 1
                <include name="bin/IKVM.GNU.Classpath.dll" />
@


1.23
log
@Renamed IKVM.Hybrid.GNU.Classpath.OpenJDK.dll to IKVM.OpenJDK.ClassLibrary.dll and made OpenJDK build the default.
@
text
@d34 1
@


1.22
log
@Integrated GNU Classpath / OpenJDK hybrid build.
@
text
@d9 2
a10 2
    <target name="hybrid">
         <property name="hybrid" value="true" />
d14 1
a14 1
        <property overwrite="false" name="hybrid" value="false" />
d19 2
a20 2
        <nant unless="${hybrid}" buildfile="classpath/classpath.build" />
        <nant if="${hybrid}" buildfile="openjdk/openjdk.build" />
d35 1
a35 1
                <include name="bin/IKVM.Hybrid.GNU.Classpath.OpenJDK.dll" />
@


1.21
log
@Changed the build process to build IKVM.Runtime in two passes to enable it to reference IKVM.GNU.Classpath (which also references IKVM.Runtime). This removes the need to do reflection to find the loaded IKVM.GNU.Classpath from IKVM.Runtime and completes the ability to run different versions of IKVM side-by-side in the same AppDomain. This should also fix bug 1659196.
@
text
@d9 4
d14 1
d19 2
a20 1
        <nant buildfile="classpath/classpath.build" />
d35 1
@


1.20
log
@*** empty log message ***
@
text
@d11 1
a11 1
        <nant buildfile="runtime/runtime.build" />
d15 1
@


1.19
log
@*** empty log message ***
@
text
@d2 1
a2 9
<project name="ikvm" default="default">
    <target name="default">
         <property name="generics" value="false" />
         <call target="all" />
    </target>
    <target name="generics">
         <property name="generics" value="true" />
         <call target="all" />
    </target>
a3 1
         <property name="generics" value="false" />
@


1.18
log
@*** empty log message ***
@
text
@d26 1
a27 1
            <nant buildfile="awt/awt.build" />
@


1.17
log
@*** empty log message ***
@
text
@d26 1
a26 1
        <if test="${nant.platform.win32}">
@


1.16
log
@*** empty log message ***
@
text
@d45 1
@


1.15
log
@*** empty log message ***
@
text
@d26 1
a26 1
        <if propertytrue="nant.platform.win32">
d34 11
a44 11
                <includes name="bin/IKVM.AWT.WinForms.dll" />
                <includes name="bin/IKVM.Runtime.dll" />
                <includes name="bin/IKVM.GNU.Classpath.dll" />
                <includes name="bin/ikvm-native.dll" />
                <includes name="bin/libikvm-native.so" />
                <includes name="bin/ikvm.exe" />
                <includes name="bin/ikvmc.exe" />
                <includes name="bin/ikvmstub.exe" />
                <includes name="bin/JVM.DLL" />
                <includes name="tools/asmref.exe" />
                <includes name="native/Release/ikvm-native.dll" />
@


1.14
log
@*** empty log message ***
@
text
@d2 9
a10 1
<project name="ikvm" default="all">
d12 1
@


1.13
log
@*** empty log message ***
@
text
@d35 1
@


1.12
log
@*** empty log message ***
@
text
@d3 6
@


1.11
log
@*** empty log message ***
@
text
@d4 1
d10 1
d13 1
a14 1
        <nant buildfile="ikvmstub/ikvmstub.build" />
d27 2
@


1.10
log
@*** empty log message ***
@
text
@d5 1
a5 4
        <if propertytrue="nant.platform.win32">
            <nant buildfile="jni/clr-win32/clr-win32.build" />
        </if>
	<nant buildfile="jni/mono/mono.build" />
d20 2
a21 2
                <includes name="bin/IKVM.JNI.CLR-Win32.dll" />
		<includes name="bin/IKVM.JNI.Mono.dll" />
@


1.9
log
@*** empty log message ***
@
text
@d4 1
a4 2
        <nant buildfile="OpenSystem.Java/OpenSystem.Java.build" />
        <nant buildfile="IK.VM.NET/ik.vm.net.build" />
d6 1
a6 1
            <nant buildfile="IK.VM.JNI/ik.vm.jni.build" />
d8 1
a8 1
	<nant buildfile="Mono.IKVM.JNI/Mono.IKVM.JNI.build" />
d15 1
a15 1
        <nant buildfile="netexp/netexp.build" />
d20 5
a24 4
                <includes name="bin/awt.dll" />
                <includes name="bin/classpath.dll" />
                <includes name="bin/ik.vm.jni.dll" />
                <includes name="bin/ik.vm.net.dll" />
d27 1
a27 3
		<includes name="bin/Mono.IKVM.JNI.dll" />
                <includes name="bin/netexp.exe" />
                <includes name="bin/OpenSystem.Java.dll" />
@


1.8
log
@Build the Mono JNI provider on windows too.
@
text
@d27 1
@


1.7
log
@Build the Mono JNI provider when compiling on unix.
@
text
@d9 1
a9 3
	<if propertytrue="nant.platform.unix">
	    <nant buildfile="Mono.IKVM.JNI/Mono.IKVM.JNI.build" />
	</if>    
@


1.6
log
@*** empty log message ***
@
text
@d9 3
@


1.5
log
@*** empty log message ***
@
text
@d6 3
a8 1
        <nant buildfile="IK.VM.JNI/ik.vm.jni.build" />
d12 3
a14 1
        <nant buildfile="awt/awt.build" />
d16 14
@


1.4
log
@*** empty log message ***
@
text
@a6 1
        <nant buildfile="netexp/netexp.build" />
d11 1
@


1.3
log
@*** empty log message ***
@
text
@d4 1
@


1.2
log
@no message
@
text
@d4 2
a5 2
        <nant buildfile="ik.vm.net/ik.vm.net.build" />
        <nant buildfile="ik.vm.jni/ik.vm.jni.build" />
@


1.1
log
@Initial revision
@
text
@a2 7
    <!--
    NOTE because of the circular dependencies, we don't use NAnt dependencies,
    but some predefined order, that hopefully makes sense.
    Please note that, because of the circular dependencies, the BIN directory
    needs to contain the IK.VM.NET.dll and classpath.dll binaries, before the project
    can be built.
    -->
d4 3
a7 3
        <nant buildfile="netexp/netexp.build" />
        <nant buildfile="ik.vm.jni/ik.vm.jni.build" />
        <nant buildfile="ik.vm.net/ik.vm.net.build" />
@


1.1.1.1
log
@no message
@
text
@@
