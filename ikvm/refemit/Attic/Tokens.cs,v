head	1.2;
access;
symbols
	v0_40_0_6:1.1
	v0_40_0_5:1.1
	v0_42_0_7:1.1
	v0_42_0_6:1.1
	v0_42_0_5:1.1
	v0_42_0_4:1.1
	v0_42_0_3:1.1
	v0_42_0_2:1.1
	v0_42_0_1:1.1
	v0_42_0_0:1.1
	v0_42:1.1.0.4
	v0_40_0_3:1.1
	v0_40_0_2:1.1
	v0_40_0_1:1.1
	v0_40_0_0:1.1
	v0_40:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	2010.04.02.04.03.42;	author jfrijters;	state dead;
branches;
next	1.1;

1.1
date	2008.11.14.07.40.49;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Removed old refemit code.
@
text
@ï»¿/*
  Copyright (C) 2008 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
*/

namespace IKVM.Reflection.Emit
{
	public struct ConstructorToken
	{
		internal readonly int Token;

		internal ConstructorToken(int token)
		{
			this.Token = token;
		}

		internal bool IsPseudoToken
		{
			get { return Token < 0; }
		}
	}

	public struct FieldToken
	{
		internal readonly int Token;

		internal FieldToken(int token)
		{
			this.Token = token;
		}

		internal bool IsPseudoToken
		{
			get { return Token < 0; }
		}
	}

	public struct MethodToken
	{
		internal readonly int Token;

		internal MethodToken(int token)
		{
			this.Token = token;
		}

		internal bool IsPseudoToken
		{
			get { return Token < 0; }
		}
	}

	public struct TypeToken
	{
		internal readonly int Token;

		internal TypeToken(int token)
		{
			this.Token = token;
		}
	}
}
@


1.1
log
@New Ref.Emit implementation.
@
text
@@

