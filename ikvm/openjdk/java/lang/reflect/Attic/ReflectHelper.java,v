head	1.4;
access;
symbols
	v8_0_5449_1:1.3
	v8_0_5449_0:1.3
	v8_0:1.3.0.8
	v7_4_5196_0:1.3
	v7_4:1.3.0.6
	v7_3:1.3.0.4
	v7_2_4630_6:1.3
	v7_2_4630_5:1.3
	v7_2_4630_4:1.3
	v7_2_4630_3:1.3
	v7_2_4630_2:1.3
	v0_46_0_4:1.1
	v7_2_4630_1:1.3
	v7_2:1.3.0.2
	v7_1_4532_2:1.2
	v7_1_4532_1:1.2
	v7_1_4532_0:1.2
	v7_1:1.2.0.2
	v7_0_4335_3:1.1
	v7_0_4335_2:1.1
	v7_0_4335_1:1.1
	v0_46_0_2:1.1
	v7_0_4335_0:1.1
	v7_0:1.1.0.14
	v0_40_0_6:1.1
	v0_40_0_5:1.1
	v0_46_0_1:1.1
	v0_46_0_0:1.1
	v0_46:1.1.0.12
	v0_36_0_14:1.1
	v0_44_0_6:1.1
	v0_44_0_5:1.1
	v0_44_0_4:1.1
	v0_44_0_3:1.1
	v0_44_0_2:1.1
	v0_42_0_7:1.1
	v0_44_0_1:1.1
	v0_44_0_0:1.1
	v0_44:1.1.0.10
	v0_42_0_6:1.1
	v0_42_0_5:1.1
	v0_42_0_4:1.1
	v0_42_0_3:1.1
	v0_42_0_2:1.1
	v0_42_0_1:1.1
	v0_42_0_0:1.1
	v0_42:1.1.0.8
	v0_40_0_3:1.1
	v0_40_0_2:1.1
	v0_40_0_1:1.1
	v0_40_0_0:1.1
	v0_40:1.1.0.6
	v0_36_0_13:1.1
	v0_38_0_1:1.1
	v0_38_0_0:1.1
	v0_38:1.1.0.4
	v0_36_0_9:1.1
	v0_36_0_7:1.1
	v0_36_0_5:1.1
	v0_36_0_4:1.1
	v0_36_0_3:1.1
	v0_36_0_2:1.1
	v0_36_0_1:1.1
	v0_36_0_0:1.1
	v0_36:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2015.03.11.08.44.45;	author jfrijters;	state dead;
branches;
next	1.3;

1.3
date	2012.08.30.08.52.13;	author jfrijters;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.23.11.51.07;	author jfrijters;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.09.07.09.29;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Bug fix. MethodHandle and JNI should be able to set static final fields.
@
text
@/*
  Copyright (C) 2007-2012 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
*/

package java.lang.reflect;

@@ikvm.lang.Internal
public final class ReflectHelper
{
    private ReflectHelper() {}

    public static Field copyFieldAndMakeAccessible(Field field)
    {
        field = field.copy();
        field.override = true;
        return field;
    }

    public static Field createFieldAndMakeAccessible(Class c, String name)
    {
        // we pass in ReflectHelper.class as the field type (which isn't used)
        // to make Field.toString() return something "meaningful" instead of crash
        Field field = new Field(c, name, ReflectHelper.class, 0, -1, null, null);
        field.override = true;
        return field;
    }
}
@


1.3
log
@Pass a bogus field type to the Field objects constructed for the intrinsified unsafe field accessors to make Field.toString() return something instead of crashing.
@
text
@@


1.2
log
@Intrinsified the unsafe.objectFieldOffset(XXX.class.getDeclaredField("xxx")) pattern to avoid expensive reflection field lookup in static initializers of common OpenJDK classes.
@
text
@d41 3
a43 1
        Field field = new Field(c, name, null, 0, -1, null, null);
@


1.1
log
@New file I forgot to add.
@
text
@d2 1
a2 1
  Copyright (C) 2007 Jeroen Frijters
d38 7
@

