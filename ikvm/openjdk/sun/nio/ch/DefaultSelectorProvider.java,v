head	1.6;
access;
symbols
	v8_1_5717_0:1.6
	v8_1:1.6.0.16
	v8_0_5449_1:1.6
	v8_0_5449_0:1.6
	v8_0:1.6.0.14
	v7_4_5196_0:1.6
	v7_4:1.6.0.12
	v7_3:1.6.0.10
	v7_2_4630_6:1.6
	v7_2_4630_5:1.6
	v7_2_4630_4:1.6
	v7_2_4630_3:1.6
	v7_2_4630_2:1.6
	v0_46_0_4:1.6
	v7_2_4630_1:1.6
	v7_2:1.6.0.8
	v7_1_4532_2:1.6
	v7_1_4532_1:1.6
	v7_1_4532_0:1.6
	v7_1:1.6.0.6
	v7_0_4335_3:1.6
	v7_0_4335_2:1.6
	v7_0_4335_1:1.6
	v0_46_0_2:1.6
	v7_0_4335_0:1.6
	v7_0:1.6.0.4
	v0_40_0_6:1.5
	v0_40_0_5:1.5
	v0_46_0_1:1.6
	v0_46_0_0:1.6
	v0_46:1.6.0.2
	v0_36_0_14:1.4
	v0_44_0_6:1.5
	v0_44_0_5:1.5
	v0_44_0_4:1.5
	v0_44_0_3:1.5
	v0_44_0_2:1.5
	v0_42_0_7:1.5
	v0_44_0_1:1.5
	v0_44_0_0:1.5
	v0_44:1.5.0.8
	v0_42_0_6:1.5
	v0_42_0_5:1.5
	v0_42_0_4:1.5
	v0_42_0_3:1.5
	v0_42_0_2:1.5
	v0_42_0_1:1.5
	v0_42_0_0:1.5
	v0_42:1.5.0.6
	v0_40_0_3:1.5
	v0_40_0_2:1.5
	v0_40_0_1:1.5
	v0_40_0_0:1.5
	v0_40:1.5.0.4
	v0_36_0_13:1.4
	v0_38_0_1:1.5
	v0_38_0_0:1.5
	v0_38:1.5.0.2
	v0_36_0_9:1.4
	v0_36_0_7:1.4
	v0_36_0_5:1.4
	v0_36_0_4:1.4
	v0_36_0_3:1.4
	v0_36_0_2:1.4
	v0_36_0_1:1.4
	v0_36_0_0:1.4
	v0_36:1.4.0.2;
locks; strict;
comment	@# @;


1.6
date	2011.01.24.16.40.23;	author jfrijters;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.11.09.05.57;	author jfrijters;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.20.09.17.26;	author jfrijters;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.18.15.35.29;	author jfrijters;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.18.05.46.38;	author jfrijters;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.13.11.42.30;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Integrated OpenJDK 6 b21.
@
text
@/*
 * Copyright (c) 2001, 2002, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

package sun.nio.ch;

import java.io.IOException;
import java.nio.channels.spi.AbstractSelector;
import java.nio.channels.spi.SelectorProvider;


/**
 * Creates this platform's default SelectorProvider
 */

public class DefaultSelectorProvider {

    /**
     * Prevent instantiation.
     */
    private DefaultSelectorProvider() { }

    /**
     * Returns the default SelectorProvider.
     */
    public static SelectorProvider create() {
        return new SelectorProviderImpl() {
            public AbstractSelector openSelector() throws IOException {
                return new DotNetSelectorImpl(this);
            }
        };
    }

}
@


1.5
log
@Converted tabs to spaces.
@
text
@d2 1
a2 1
 * Copyright 2001-2002 Sun Microsystems, Inc.  All Rights Reserved.
d7 1
a7 1
 * published by the Free Software Foundation.  Sun designates this
d9 1
a9 1
 * by Sun in the LICENSE file that accompanied this code.
d21 3
a23 3
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
@


1.4
log
@- Implemented DatagramChannelImpl and PipeImpl.
- More nio fixes.
@
text
@d48 5
a52 5
	return new SelectorProviderImpl() {
	    public AbstractSelector openSelector() throws IOException {
		return new DotNetSelectorImpl(this);
	    }
	};
@


1.3
log
@Implemented ServerSocketChannelImpl.
@
text
@d48 1
a48 14
	// TODO we should instantiate SelectorProviderImpl here
	return new SelectorProvider() {
	    public java.nio.channels.DatagramChannel openDatagramChannel() throws IOException {
		throw new Error("temporary");
	    }
	    public java.nio.channels.Pipe openPipe() throws IOException {
		throw new Error("temporary");
	    }
	    public java.nio.channels.ServerSocketChannel openServerSocketChannel() throws IOException {
		return new ServerSocketChannelImpl(this);
	    }
	    public java.nio.channels.SocketChannel openSocketChannel() throws IOException {
		return new SocketChannelImpl(this);
	    }
@


1.2
log
@Implement SocketChannelImpl & DotNetSelectorImpl.
@
text
@d57 1
a57 1
		throw new Error("temporary");
@


1.1
log
@- Integrated OpenJDK packages: java.net, java.security, java.util.jar, javax.naming, javax.net, javax.security, javax.smartcardio, java.nio.channels.spi
- Integrated IcedTea crypto/security classes.
@
text
@d28 2
d48 18
a65 1
        throw new Error("Not implemented");
@

