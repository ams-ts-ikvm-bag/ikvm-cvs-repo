head	1.2;
access;
symbols
	v7_3:1.1.0.18
	v7_2_4630_6:1.1
	v7_2_4630_5:1.1
	v7_2_4630_4:1.1
	v7_2_4630_3:1.1
	v7_2_4630_2:1.1
	v0_46_0_4:1.1
	v7_2_4630_1:1.1
	v7_2:1.1.0.16
	v7_1_4532_2:1.1
	v7_1_4532_1:1.1
	v7_1_4532_0:1.1
	v7_1:1.1.0.14
	v7_0_4335_3:1.1
	v7_0_4335_2:1.1
	v7_0_4335_1:1.1
	v0_46_0_2:1.1
	v7_0_4335_0:1.1
	v7_0:1.1.0.12
	v0_40_0_6:1.1
	v0_40_0_5:1.1
	v0_46_0_1:1.1
	v0_46_0_0:1.1
	v0_46:1.1.0.10
	v0_44_0_6:1.1
	v0_44_0_5:1.1
	v0_44_0_4:1.1
	v0_44_0_3:1.1
	v0_44_0_2:1.1
	v0_42_0_7:1.1
	v0_44_0_1:1.1
	v0_44_0_0:1.1
	v0_44:1.1.0.8
	v0_42_0_6:1.1
	v0_42_0_5:1.1
	v0_42_0_4:1.1
	v0_42_0_3:1.1
	v0_42_0_2:1.1
	v0_42_0_1:1.1
	v0_42_0_0:1.1
	v0_42:1.1.0.6
	v0_40_0_3:1.1
	v0_40_0_2:1.1
	v0_40_0_1:1.1
	v0_40_0_0:1.1
	v0_40:1.1.0.4
	v0_38_0_1:1.1
	v0_38_0_0:1.1
	v0_38:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2013.08.12.07.55.58;	author jfrijters;	state dead;
branches;
next	1.1;

1.1
date	2008.05.31.15.20.49;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Switched from @@HasCallerID to @@CallerSensitive and merged CallerSenstive related 7u40 changes.
@
text
@/*
  Copyright (C) 2008 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
*/
package ikvm.internal;

import java.lang.annotation.*;

/* This annotation is used to mark method inside the core class library that require an additional (hidden) ikvm.internal.CallerID parameter
 * (automatically supplied by the runtime) to efficiently query the caller's class or class loader.
 * It should only be applied to final or static methods that use one of the supported caller id methods (as defined in intrinsics.cs)
 */

@@Retention(RetentionPolicy.CLASS)
@@Target({ ElementType.METHOD })
@@ikvm.lang.Internal
public @@interface HasCallerID { }
@


1.1
log
@- Implemented CallerID infrastructure.
- Marked various methods with HasCallerID annotation.
- Rewrote some methods to explicitly use CallerID.
@
text
@@

