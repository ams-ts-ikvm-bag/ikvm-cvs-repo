head	1.7;
access;
symbols
	v8_1_5717_0:1.7
	v8_1:1.7.0.12
	v8_0_5449_1:1.7
	v8_0_5449_0:1.7
	v8_0:1.7.0.10
	v7_4_5196_0:1.7
	v7_4:1.7.0.8
	v7_3:1.7.0.6
	v7_2_4630_6:1.7
	v7_2_4630_5:1.7
	v7_2_4630_4:1.7
	v7_2_4630_3:1.7
	v7_2_4630_2:1.7
	v0_46_0_4:1.6
	v7_2_4630_1:1.7
	v7_2:1.7.0.4
	v7_1_4532_2:1.7
	v7_1_4532_1:1.7
	v7_1_4532_0:1.7
	v7_1:1.7.0.2
	v7_0_4335_3:1.6
	v7_0_4335_2:1.6
	v7_0_4335_1:1.6
	v0_46_0_2:1.6
	v7_0_4335_0:1.6
	v7_0:1.6.0.6
	v0_40_0_6:1.4
	v0_40_0_5:1.4
	v0_46_0_1:1.6
	v0_46_0_0:1.6
	v0_46:1.6.0.4
	v0_36_0_14:1.4
	v0_44_0_6:1.6
	v0_44_0_5:1.6
	v0_44_0_4:1.6
	v0_44_0_3:1.6
	v0_44_0_2:1.6
	v0_42_0_7:1.4
	v0_44_0_1:1.6
	v0_44_0_0:1.6
	v0_44:1.6.0.2
	v0_42_0_6:1.4
	v0_42_0_5:1.4
	v0_42_0_4:1.4
	v0_42_0_3:1.4
	v0_42_0_2:1.4
	v0_42_0_1:1.4
	v0_42_0_0:1.4
	v0_42:1.4.0.8
	v0_40_0_3:1.4
	v0_40_0_2:1.4
	v0_40_0_1:1.4
	v0_40_0_0:1.4
	v0_40:1.4.0.6
	v0_36_0_13:1.4
	v0_38_0_1:1.4
	v0_38_0_0:1.4
	v0_38:1.4.0.4
	v0_36_0_9:1.4
	v0_36_0_7:1.4
	v0_36_0_5:1.4
	v0_36_0_4:1.4
	v0_36_0_3:1.4
	v0_36_0_2:1.4
	v0_36_0_1:1.4
	v0_36_0_0:1.4
	v0_36:1.4.0.2
	v0_34_0_3:1.3
	v0_34_0_2:1.3
	v0_34_0_1:1.3
	v0_34_0_0:1.3
	v0_34:1.3.0.2
	v0_32:1.1.0.2
	v0_32_0_0:1.1;
locks; strict;
comment	@# @;


1.7
date	2011.11.24.08.35.47;	author jfrijters;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.28.04.23.58;	author jfrijters;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.27.14.08.58;	author jfrijters;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.18.06.10.27;	author jfrijters;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.08.10.50.29;	author jfrijters;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.04.07.46.40;	author jfrijters;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.17.07.33.40;	author jfrijters;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Added support for classes that represent arrays of remapped .NET types and .NET primitives.
@
text
@/*
  Copyright (C) 2006, 2007 Jeroen Frijters

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  Jeroen Frijters
  jeroen@@frijters.net
  
*/
package ikvm.runtime;

import cli.System.Type;
import cli.System.RuntimeTypeHandle;
import sun.misc.Unsafe;

public final class Util
{
    private Util()
    {
    }

    public static native Class getClassFromObject(Object o);

    public static native Class getClassFromTypeHandle(RuntimeTypeHandle handle);

    // this is used to create an array of a remapped type (e.g. getClassFromTypeHandle(typeof(object), 1) returns cli.System.Object[])
    public static native Class getClassFromTypeHandle(RuntimeTypeHandle handle, int rank);

    public static native Class getFriendlyClassFromType(Type type);

    public static native Type getInstanceTypeFromClass(Class classObject);

    public static native Throwable mapException(Throwable x);
    
    public static native Throwable unmapException(Throwable x);

    public static void throwException(cli.System.Exception x)
    {
        Unsafe.getUnsafe().throwException(x);
    }
}
@


1.6
log
@- Util.mapException() shouldn't be HideFromJava as that would be a breaking change, and were explicitly filtering it from the stack trace anyway.
- Minor ExceptionHelper clean up.
@
text
@d40 3
@


1.5
log
@- Added new public API to unmap exception (ikvm.runtime.Util.unmapException()).
- Moved (parts of) mapping and unmapping to C# side.
@
text
@a43 1
    @@cli.IKVM.Attributes.HideFromJavaAttribute.Annotation
@


1.4
log
@Removed VMClass dependencies and added some sun.misc.Unsafe methods.
@
text
@d44 4
a47 5
    //[HideFromJava]
    public static Throwable mapException(Throwable x)
    {
        return ExceptionHelper.MapExceptionFast(x, true);
    }
@


1.3
log
@Added ikvm.runtime.Util.throwException() method to throw CLI exceptions without declaring them.
@
text
@d28 1
d42 1
a42 6
    public static Type getInstanceTypeFromClass(Class classObject)
    {
        return GetInstanceTypeFromTypeWrapper(VMClass.getWrapper(classObject));
    }

    private static native Type GetInstanceTypeFromTypeWrapper(Object wrapper);
d52 1
a52 1
        VMClass.throwException(x);
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
  Copyright (C) 2006 Jeroen Frijters
d53 5
@


1.1
log
@*** empty log message ***
@
text
@d1 23
@

